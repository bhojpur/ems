// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.2
// source: ems.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FilterOp int32

const (
	FilterOp_OP_EQUALS      FilterOp = 0
	FilterOp_OP_STARTS_WITH FilterOp = 1
	FilterOp_OP_ENDS_WITH   FilterOp = 2
	FilterOp_OP_CONTAINS    FilterOp = 3
	FilterOp_OP_EXISTS      FilterOp = 4
)

// Enum value maps for FilterOp.
var (
	FilterOp_name = map[int32]string{
		0: "OP_EQUALS",
		1: "OP_STARTS_WITH",
		2: "OP_ENDS_WITH",
		3: "OP_CONTAINS",
		4: "OP_EXISTS",
	}
	FilterOp_value = map[string]int32{
		"OP_EQUALS":      0,
		"OP_STARTS_WITH": 1,
		"OP_ENDS_WITH":   2,
		"OP_CONTAINS":    3,
		"OP_EXISTS":      4,
	}
)

func (x FilterOp) Enum() *FilterOp {
	p := new(FilterOp)
	*p = x
	return p
}

func (x FilterOp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterOp) Descriptor() protoreflect.EnumDescriptor {
	return file_ems_proto_enumTypes[0].Descriptor()
}

func (FilterOp) Type() protoreflect.EnumType {
	return &file_ems_proto_enumTypes[0]
}

func (x FilterOp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterOp.Descriptor instead.
func (FilterOp) EnumDescriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{0}
}

type ListenRequestLogs int32

const (
	ListenRequestLogs_LOGS_DISABLED ListenRequestLogs = 0
	ListenRequestLogs_LOGS_UNSLICED ListenRequestLogs = 1
	ListenRequestLogs_LOGS_RAW      ListenRequestLogs = 2
	ListenRequestLogs_LOGS_HTML     ListenRequestLogs = 3
)

// Enum value maps for ListenRequestLogs.
var (
	ListenRequestLogs_name = map[int32]string{
		0: "LOGS_DISABLED",
		1: "LOGS_UNSLICED",
		2: "LOGS_RAW",
		3: "LOGS_HTML",
	}
	ListenRequestLogs_value = map[string]int32{
		"LOGS_DISABLED": 0,
		"LOGS_UNSLICED": 1,
		"LOGS_RAW":      2,
		"LOGS_HTML":     3,
	}
)

func (x ListenRequestLogs) Enum() *ListenRequestLogs {
	p := new(ListenRequestLogs)
	*p = x
	return p
}

func (x ListenRequestLogs) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListenRequestLogs) Descriptor() protoreflect.EnumDescriptor {
	return file_ems_proto_enumTypes[1].Descriptor()
}

func (ListenRequestLogs) Type() protoreflect.EnumType {
	return &file_ems_proto_enumTypes[1]
}

func (x ListenRequestLogs) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListenRequestLogs.Descriptor instead.
func (ListenRequestLogs) EnumDescriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{1}
}

type PoolTrigger int32

const (
	PoolTrigger_TRIGGER_UNKNOWN PoolTrigger = 0
	PoolTrigger_TRIGGER_MANUAL  PoolTrigger = 1
	PoolTrigger_TRIGGER_PUSH    PoolTrigger = 2
	PoolTrigger_TRIGGER_DELETED PoolTrigger = 3
)

// Enum value maps for PoolTrigger.
var (
	PoolTrigger_name = map[int32]string{
		0: "TRIGGER_UNKNOWN",
		1: "TRIGGER_MANUAL",
		2: "TRIGGER_PUSH",
		3: "TRIGGER_DELETED",
	}
	PoolTrigger_value = map[string]int32{
		"TRIGGER_UNKNOWN": 0,
		"TRIGGER_MANUAL":  1,
		"TRIGGER_PUSH":    2,
		"TRIGGER_DELETED": 3,
	}
)

func (x PoolTrigger) Enum() *PoolTrigger {
	p := new(PoolTrigger)
	*p = x
	return p
}

func (x PoolTrigger) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PoolTrigger) Descriptor() protoreflect.EnumDescriptor {
	return file_ems_proto_enumTypes[2].Descriptor()
}

func (PoolTrigger) Type() protoreflect.EnumType {
	return &file_ems_proto_enumTypes[2]
}

func (x PoolTrigger) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PoolTrigger.Descriptor instead.
func (PoolTrigger) EnumDescriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{2}
}

type PoolPhase int32

const (
	// Unknown means we don't know what state the Pool is in
	PoolPhase_PHASE_UNKNOWN PoolPhase = 0
	// Preparing means the Pool hasn't started yet and isn't consuming resources in the system
	PoolPhase_PHASE_PREPARING PoolPhase = 1
	// Starting means the Pool has been scheduled and is waiting to run. Things that might prevent it
	// from running already are pod scheduling, image pull or container startup.
	PoolPhase_PHASE_STARTING PoolPhase = 2
	// Running means the Pool is actually running and doing work.
	PoolPhase_PHASE_RUNNING PoolPhase = 3
	// Done means the Pool has run and is finished
	PoolPhase_PHASE_DONE PoolPhase = 4
	// Cleaning means the Pool is in post-run cleanup
	PoolPhase_PHASE_CLEANUP PoolPhase = 5
	// Waiting means the Pool is waiting for its start time or some other condition to be met
	PoolPhase_PHASE_WAITING PoolPhase = 6
)

// Enum value maps for PoolPhase.
var (
	PoolPhase_name = map[int32]string{
		0: "PHASE_UNKNOWN",
		1: "PHASE_PREPARING",
		2: "PHASE_STARTING",
		3: "PHASE_RUNNING",
		4: "PHASE_DONE",
		5: "PHASE_CLEANUP",
		6: "PHASE_WAITING",
	}
	PoolPhase_value = map[string]int32{
		"PHASE_UNKNOWN":   0,
		"PHASE_PREPARING": 1,
		"PHASE_STARTING":  2,
		"PHASE_RUNNING":   3,
		"PHASE_DONE":      4,
		"PHASE_CLEANUP":   5,
		"PHASE_WAITING":   6,
	}
)

func (x PoolPhase) Enum() *PoolPhase {
	p := new(PoolPhase)
	*p = x
	return p
}

func (x PoolPhase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PoolPhase) Descriptor() protoreflect.EnumDescriptor {
	return file_ems_proto_enumTypes[3].Descriptor()
}

func (PoolPhase) Type() protoreflect.EnumType {
	return &file_ems_proto_enumTypes[3]
}

func (x PoolPhase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PoolPhase.Descriptor instead.
func (PoolPhase) EnumDescriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{3}
}

type LogSliceType int32

const (
	LogSliceType_SLICE_ABANDONED LogSliceType = 0
	LogSliceType_SLICE_PHASE     LogSliceType = 1
	LogSliceType_SLICE_START     LogSliceType = 2
	LogSliceType_SLICE_CONTENT   LogSliceType = 3
	LogSliceType_SLICE_DONE      LogSliceType = 4
	LogSliceType_SLICE_FAIL      LogSliceType = 5
	LogSliceType_SLICE_RESULT    LogSliceType = 6
)

// Enum value maps for LogSliceType.
var (
	LogSliceType_name = map[int32]string{
		0: "SLICE_ABANDONED",
		1: "SLICE_PHASE",
		2: "SLICE_START",
		3: "SLICE_CONTENT",
		4: "SLICE_DONE",
		5: "SLICE_FAIL",
		6: "SLICE_RESULT",
	}
	LogSliceType_value = map[string]int32{
		"SLICE_ABANDONED": 0,
		"SLICE_PHASE":     1,
		"SLICE_START":     2,
		"SLICE_CONTENT":   3,
		"SLICE_DONE":      4,
		"SLICE_FAIL":      5,
		"SLICE_RESULT":    6,
	}
)

func (x LogSliceType) Enum() *LogSliceType {
	p := new(LogSliceType)
	*p = x
	return p
}

func (x LogSliceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogSliceType) Descriptor() protoreflect.EnumDescriptor {
	return file_ems_proto_enumTypes[4].Descriptor()
}

func (LogSliceType) Type() protoreflect.EnumType {
	return &file_ems_proto_enumTypes[4]
}

func (x LogSliceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogSliceType.Descriptor instead.
func (LogSliceType) EnumDescriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{4}
}

type StartLocalPoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//	*StartLocalPoolRequest_Metadata
	//	*StartLocalPoolRequest_ConfigYaml
	//	*StartLocalPoolRequest_PoolYaml
	//	*StartLocalPoolRequest_ApplicationTar
	//	*StartLocalPoolRequest_ApplicationTarDone
	Content isStartLocalPoolRequest_Content `protobuf_oneof:"content"`
}

func (x *StartLocalPoolRequest) Reset() {
	*x = StartLocalPoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartLocalPoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartLocalPoolRequest) ProtoMessage() {}

func (x *StartLocalPoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ems_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartLocalPoolRequest.ProtoReflect.Descriptor instead.
func (*StartLocalPoolRequest) Descriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{0}
}

func (m *StartLocalPoolRequest) GetContent() isStartLocalPoolRequest_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *StartLocalPoolRequest) GetMetadata() *PoolMetadata {
	if x, ok := x.GetContent().(*StartLocalPoolRequest_Metadata); ok {
		return x.Metadata
	}
	return nil
}

func (x *StartLocalPoolRequest) GetConfigYaml() []byte {
	if x, ok := x.GetContent().(*StartLocalPoolRequest_ConfigYaml); ok {
		return x.ConfigYaml
	}
	return nil
}

func (x *StartLocalPoolRequest) GetPoolYaml() []byte {
	if x, ok := x.GetContent().(*StartLocalPoolRequest_PoolYaml); ok {
		return x.PoolYaml
	}
	return nil
}

func (x *StartLocalPoolRequest) GetApplicationTar() []byte {
	if x, ok := x.GetContent().(*StartLocalPoolRequest_ApplicationTar); ok {
		return x.ApplicationTar
	}
	return nil
}

func (x *StartLocalPoolRequest) GetApplicationTarDone() bool {
	if x, ok := x.GetContent().(*StartLocalPoolRequest_ApplicationTarDone); ok {
		return x.ApplicationTarDone
	}
	return false
}

type isStartLocalPoolRequest_Content interface {
	isStartLocalPoolRequest_Content()
}

type StartLocalPoolRequest_Metadata struct {
	Metadata *PoolMetadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type StartLocalPoolRequest_ConfigYaml struct {
	ConfigYaml []byte `protobuf:"bytes,2,opt,name=config_yaml,json=configYaml,proto3,oneof"`
}

type StartLocalPoolRequest_PoolYaml struct {
	PoolYaml []byte `protobuf:"bytes,3,opt,name=pool_yaml,json=poolYaml,proto3,oneof"`
}

type StartLocalPoolRequest_ApplicationTar struct {
	ApplicationTar []byte `protobuf:"bytes,4,opt,name=application_tar,json=applicationTar,proto3,oneof"`
}

type StartLocalPoolRequest_ApplicationTarDone struct {
	ApplicationTarDone bool `protobuf:"varint,5,opt,name=application_tar_done,json=applicationTarDone,proto3,oneof"`
}

func (*StartLocalPoolRequest_Metadata) isStartLocalPoolRequest_Content() {}

func (*StartLocalPoolRequest_ConfigYaml) isStartLocalPoolRequest_Content() {}

func (*StartLocalPoolRequest_PoolYaml) isStartLocalPoolRequest_Content() {}

func (*StartLocalPoolRequest_ApplicationTar) isStartLocalPoolRequest_Content() {}

func (*StartLocalPoolRequest_ApplicationTarDone) isStartLocalPoolRequest_Content() {}

type StartPoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *PoolStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *StartPoolResponse) Reset() {
	*x = StartPoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPoolResponse) ProtoMessage() {}

func (x *StartPoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ems_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPoolResponse.ProtoReflect.Descriptor instead.
func (*StartPoolResponse) Descriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{1}
}

func (x *StartPoolResponse) GetStatus() *PoolStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type StartPoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata   *PoolMetadata          `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	PoolPath   string                 `protobuf:"bytes,2,opt,name=pool_path,json=poolPath,proto3" json:"pool_path,omitempty"`
	PoolYaml   []byte                 `protobuf:"bytes,3,opt,name=pool_yaml,json=poolYaml,proto3" json:"pool_yaml,omitempty"`
	Sideload   []byte                 `protobuf:"bytes,4,opt,name=sideload,proto3" json:"sideload,omitempty"`
	WaitUntil  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=wait_until,json=waitUntil,proto3" json:"wait_until,omitempty"`
	NameSuffix string                 `protobuf:"bytes,6,opt,name=name_suffix,json=nameSuffix,proto3" json:"name_suffix,omitempty"`
}

func (x *StartPoolRequest) Reset() {
	*x = StartPoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPoolRequest) ProtoMessage() {}

func (x *StartPoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ems_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPoolRequest.ProtoReflect.Descriptor instead.
func (*StartPoolRequest) Descriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{2}
}

func (x *StartPoolRequest) GetMetadata() *PoolMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *StartPoolRequest) GetPoolPath() string {
	if x != nil {
		return x.PoolPath
	}
	return ""
}

func (x *StartPoolRequest) GetPoolYaml() []byte {
	if x != nil {
		return x.PoolYaml
	}
	return nil
}

func (x *StartPoolRequest) GetSideload() []byte {
	if x != nil {
		return x.Sideload
	}
	return nil
}

func (x *StartPoolRequest) GetWaitUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.WaitUntil
	}
	return nil
}

func (x *StartPoolRequest) GetNameSuffix() string {
	if x != nil {
		return x.NameSuffix
	}
	return ""
}

type StartFromPreviousPoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreviousPool string                 `protobuf:"bytes,1,opt,name=previous_pool,json=previousPool,proto3" json:"previous_pool,omitempty"`
	GitopsToken  string                 `protobuf:"bytes,2,opt,name=gitops_token,json=gitopsToken,proto3" json:"gitops_token,omitempty"`
	WaitUntil    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=wait_until,json=waitUntil,proto3" json:"wait_until,omitempty"`
}

func (x *StartFromPreviousPoolRequest) Reset() {
	*x = StartFromPreviousPoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartFromPreviousPoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartFromPreviousPoolRequest) ProtoMessage() {}

func (x *StartFromPreviousPoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ems_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartFromPreviousPoolRequest.ProtoReflect.Descriptor instead.
func (*StartFromPreviousPoolRequest) Descriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{3}
}

func (x *StartFromPreviousPoolRequest) GetPreviousPool() string {
	if x != nil {
		return x.PreviousPool
	}
	return ""
}

func (x *StartFromPreviousPoolRequest) GetGitopsToken() string {
	if x != nil {
		return x.GitopsToken
	}
	return ""
}

func (x *StartFromPreviousPoolRequest) GetWaitUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.WaitUntil
	}
	return nil
}

type ListPoolsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter []*FilterExpression `protobuf:"bytes,1,rep,name=filter,proto3" json:"filter,omitempty"`
	Order  []*OrderExpression  `protobuf:"bytes,2,rep,name=order,proto3" json:"order,omitempty"`
	Start  int32               `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	Limit  int32               `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListPoolsRequest) Reset() {
	*x = ListPoolsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPoolsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPoolsRequest) ProtoMessage() {}

func (x *ListPoolsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ems_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPoolsRequest.ProtoReflect.Descriptor instead.
func (*ListPoolsRequest) Descriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{4}
}

func (x *ListPoolsRequest) GetFilter() []*FilterExpression {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListPoolsRequest) GetOrder() []*OrderExpression {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *ListPoolsRequest) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ListPoolsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type FilterExpression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Terms []*FilterTerm `protobuf:"bytes,1,rep,name=terms,proto3" json:"terms,omitempty"`
}

func (x *FilterExpression) Reset() {
	*x = FilterExpression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterExpression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterExpression) ProtoMessage() {}

func (x *FilterExpression) ProtoReflect() protoreflect.Message {
	mi := &file_ems_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterExpression.ProtoReflect.Descriptor instead.
func (*FilterExpression) Descriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{5}
}

func (x *FilterExpression) GetTerms() []*FilterTerm {
	if x != nil {
		return x.Terms
	}
	return nil
}

type FilterTerm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field     string   `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Value     string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Operation FilterOp `protobuf:"varint,3,opt,name=operation,proto3,enum=v1.FilterOp" json:"operation,omitempty"`
	Negate    bool     `protobuf:"varint,4,opt,name=negate,proto3" json:"negate,omitempty"`
}

func (x *FilterTerm) Reset() {
	*x = FilterTerm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterTerm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterTerm) ProtoMessage() {}

func (x *FilterTerm) ProtoReflect() protoreflect.Message {
	mi := &file_ems_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterTerm.ProtoReflect.Descriptor instead.
func (*FilterTerm) Descriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{6}
}

func (x *FilterTerm) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *FilterTerm) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *FilterTerm) GetOperation() FilterOp {
	if x != nil {
		return x.Operation
	}
	return FilterOp_OP_EQUALS
}

func (x *FilterTerm) GetNegate() bool {
	if x != nil {
		return x.Negate
	}
	return false
}

type OrderExpression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field     string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Ascending bool   `protobuf:"varint,2,opt,name=ascending,proto3" json:"ascending,omitempty"`
}

func (x *OrderExpression) Reset() {
	*x = OrderExpression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderExpression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderExpression) ProtoMessage() {}

func (x *OrderExpression) ProtoReflect() protoreflect.Message {
	mi := &file_ems_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderExpression.ProtoReflect.Descriptor instead.
func (*OrderExpression) Descriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{7}
}

func (x *OrderExpression) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *OrderExpression) GetAscending() bool {
	if x != nil {
		return x.Ascending
	}
	return false
}

type ListPoolsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total  int32         `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Result []*PoolStatus `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ListPoolsResponse) Reset() {
	*x = ListPoolsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPoolsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPoolsResponse) ProtoMessage() {}

func (x *ListPoolsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ems_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPoolsResponse.ProtoReflect.Descriptor instead.
func (*ListPoolsResponse) Descriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{8}
}

func (x *ListPoolsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListPoolsResponse) GetResult() []*PoolStatus {
	if x != nil {
		return x.Result
	}
	return nil
}

type SubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter []*FilterExpression `protobuf:"bytes,1,rep,name=filter,proto3" json:"filter,omitempty"`
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ems_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{9}
}

func (x *SubscribeRequest) GetFilter() []*FilterExpression {
	if x != nil {
		return x.Filter
	}
	return nil
}

type SubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *PoolStatus `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SubscribeResponse) Reset() {
	*x = SubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeResponse) ProtoMessage() {}

func (x *SubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ems_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeResponse.ProtoReflect.Descriptor instead.
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{10}
}

func (x *SubscribeResponse) GetResult() *PoolStatus {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetPoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetPoolRequest) Reset() {
	*x = GetPoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPoolRequest) ProtoMessage() {}

func (x *GetPoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ems_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPoolRequest.ProtoReflect.Descriptor instead.
func (*GetPoolRequest) Descriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{11}
}

func (x *GetPoolRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetPoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *PoolStatus `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GetPoolResponse) Reset() {
	*x = GetPoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPoolResponse) ProtoMessage() {}

func (x *GetPoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ems_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPoolResponse.ProtoReflect.Descriptor instead.
func (*GetPoolResponse) Descriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{12}
}

func (x *GetPoolResponse) GetResult() *PoolStatus {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Updates bool              `protobuf:"varint,2,opt,name=updates,proto3" json:"updates,omitempty"`
	Logs    ListenRequestLogs `protobuf:"varint,3,opt,name=logs,proto3,enum=v1.ListenRequestLogs" json:"logs,omitempty"`
}

func (x *ListenRequest) Reset() {
	*x = ListenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenRequest) ProtoMessage() {}

func (x *ListenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ems_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenRequest.ProtoReflect.Descriptor instead.
func (*ListenRequest) Descriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{13}
}

func (x *ListenRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListenRequest) GetUpdates() bool {
	if x != nil {
		return x.Updates
	}
	return false
}

func (x *ListenRequest) GetLogs() ListenRequestLogs {
	if x != nil {
		return x.Logs
	}
	return ListenRequestLogs_LOGS_DISABLED
}

type ListenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//	*ListenResponse_Update
	//	*ListenResponse_Slice
	Content isListenResponse_Content `protobuf_oneof:"content"`
}

func (x *ListenResponse) Reset() {
	*x = ListenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenResponse) ProtoMessage() {}

func (x *ListenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ems_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenResponse.ProtoReflect.Descriptor instead.
func (*ListenResponse) Descriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{14}
}

func (m *ListenResponse) GetContent() isListenResponse_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *ListenResponse) GetUpdate() *PoolStatus {
	if x, ok := x.GetContent().(*ListenResponse_Update); ok {
		return x.Update
	}
	return nil
}

func (x *ListenResponse) GetSlice() *LogSliceEvent {
	if x, ok := x.GetContent().(*ListenResponse_Slice); ok {
		return x.Slice
	}
	return nil
}

type isListenResponse_Content interface {
	isListenResponse_Content()
}

type ListenResponse_Update struct {
	Update *PoolStatus `protobuf:"bytes,1,opt,name=update,proto3,oneof"`
}

type ListenResponse_Slice struct {
	Slice *LogSliceEvent `protobuf:"bytes,2,opt,name=slice,proto3,oneof"`
}

func (*ListenResponse_Update) isListenResponse_Content() {}

func (*ListenResponse_Slice) isListenResponse_Content() {}

type PoolStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Metadata   *PoolMetadata   `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Phase      PoolPhase       `protobuf:"varint,3,opt,name=phase,proto3,enum=v1.PoolPhase" json:"phase,omitempty"`
	Conditions *PoolConditions `protobuf:"bytes,4,opt,name=conditions,proto3" json:"conditions,omitempty"`
	Details    string          `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`
	Results    []*PoolResult   `protobuf:"bytes,6,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *PoolStatus) Reset() {
	*x = PoolStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolStatus) ProtoMessage() {}

func (x *PoolStatus) ProtoReflect() protoreflect.Message {
	mi := &file_ems_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolStatus.ProtoReflect.Descriptor instead.
func (*PoolStatus) Descriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{15}
}

func (x *PoolStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PoolStatus) GetMetadata() *PoolMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *PoolStatus) GetPhase() PoolPhase {
	if x != nil {
		return x.Phase
	}
	return PoolPhase_PHASE_UNKNOWN
}

func (x *PoolStatus) GetConditions() *PoolConditions {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *PoolStatus) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *PoolStatus) GetResults() []*PoolResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type PoolMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner        string                 `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Repository   *Repository            `protobuf:"bytes,2,opt,name=repository,proto3" json:"repository,omitempty"`
	Trigger      PoolTrigger            `protobuf:"varint,3,opt,name=trigger,proto3,enum=v1.PoolTrigger" json:"trigger,omitempty"`
	Created      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Finished     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=finished,proto3" json:"finished,omitempty"`
	Annotations  []*Annotation          `protobuf:"bytes,6,rep,name=annotations,proto3" json:"annotations,omitempty"`
	PoolSpecName string                 `protobuf:"bytes,7,opt,name=pool_spec_name,json=poolSpecName,proto3" json:"pool_spec_name,omitempty"`
}

func (x *PoolMetadata) Reset() {
	*x = PoolMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolMetadata) ProtoMessage() {}

func (x *PoolMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_ems_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolMetadata.ProtoReflect.Descriptor instead.
func (*PoolMetadata) Descriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{16}
}

func (x *PoolMetadata) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *PoolMetadata) GetRepository() *Repository {
	if x != nil {
		return x.Repository
	}
	return nil
}

func (x *PoolMetadata) GetTrigger() PoolTrigger {
	if x != nil {
		return x.Trigger
	}
	return PoolTrigger_TRIGGER_UNKNOWN
}

func (x *PoolMetadata) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *PoolMetadata) GetFinished() *timestamppb.Timestamp {
	if x != nil {
		return x.Finished
	}
	return nil
}

func (x *PoolMetadata) GetAnnotations() []*Annotation {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *PoolMetadata) GetPoolSpecName() string {
	if x != nil {
		return x.PoolSpecName
	}
	return ""
}

type Repository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host     string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Owner    string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Repo     string `protobuf:"bytes,3,opt,name=repo,proto3" json:"repo,omitempty"`
	Ref      string `protobuf:"bytes,4,opt,name=ref,proto3" json:"ref,omitempty"`
	Revision string `protobuf:"bytes,5,opt,name=revision,proto3" json:"revision,omitempty"`
}

func (x *Repository) Reset() {
	*x = Repository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Repository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Repository) ProtoMessage() {}

func (x *Repository) ProtoReflect() protoreflect.Message {
	mi := &file_ems_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Repository.ProtoReflect.Descriptor instead.
func (*Repository) Descriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{17}
}

func (x *Repository) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Repository) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Repository) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *Repository) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *Repository) GetRevision() string {
	if x != nil {
		return x.Revision
	}
	return ""
}

type Annotation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Annotation) Reset() {
	*x = Annotation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Annotation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Annotation) ProtoMessage() {}

func (x *Annotation) ProtoReflect() protoreflect.Message {
	mi := &file_ems_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Annotation.ProtoReflect.Descriptor instead.
func (*Annotation) Descriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{18}
}

func (x *Annotation) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Annotation) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type PoolConditions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	FailureCount int32                  `protobuf:"varint,2,opt,name=failure_count,json=failureCount,proto3" json:"failure_count,omitempty"`
	CanReplay    bool                   `protobuf:"varint,3,opt,name=can_replay,json=canReplay,proto3" json:"can_replay,omitempty"`
	WaitUntil    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=wait_until,json=waitUntil,proto3" json:"wait_until,omitempty"`
	DidExecute   bool                   `protobuf:"varint,5,opt,name=did_execute,json=didExecute,proto3" json:"did_execute,omitempty"`
}

func (x *PoolConditions) Reset() {
	*x = PoolConditions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolConditions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolConditions) ProtoMessage() {}

func (x *PoolConditions) ProtoReflect() protoreflect.Message {
	mi := &file_ems_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolConditions.ProtoReflect.Descriptor instead.
func (*PoolConditions) Descriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{19}
}

func (x *PoolConditions) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PoolConditions) GetFailureCount() int32 {
	if x != nil {
		return x.FailureCount
	}
	return 0
}

func (x *PoolConditions) GetCanReplay() bool {
	if x != nil {
		return x.CanReplay
	}
	return false
}

func (x *PoolConditions) GetWaitUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.WaitUntil
	}
	return nil
}

func (x *PoolConditions) GetDidExecute() bool {
	if x != nil {
		return x.DidExecute
	}
	return false
}

type PoolResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Payload     string   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Channels    []string `protobuf:"bytes,4,rep,name=channels,proto3" json:"channels,omitempty"`
}

func (x *PoolResult) Reset() {
	*x = PoolResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolResult) ProtoMessage() {}

func (x *PoolResult) ProtoReflect() protoreflect.Message {
	mi := &file_ems_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolResult.ProtoReflect.Descriptor instead.
func (*PoolResult) Descriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{20}
}

func (x *PoolResult) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PoolResult) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *PoolResult) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PoolResult) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

type LogSliceEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type    LogSliceType `protobuf:"varint,2,opt,name=type,proto3,enum=v1.LogSliceType" json:"type,omitempty"`
	Payload string       `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *LogSliceEvent) Reset() {
	*x = LogSliceEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogSliceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogSliceEvent) ProtoMessage() {}

func (x *LogSliceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ems_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogSliceEvent.ProtoReflect.Descriptor instead.
func (*LogSliceEvent) Descriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{21}
}

func (x *LogSliceEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LogSliceEvent) GetType() LogSliceType {
	if x != nil {
		return x.Type
	}
	return LogSliceType_SLICE_ABANDONED
}

func (x *LogSliceEvent) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

type StopPoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *StopPoolRequest) Reset() {
	*x = StopPoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopPoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopPoolRequest) ProtoMessage() {}

func (x *StopPoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ems_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopPoolRequest.ProtoReflect.Descriptor instead.
func (*StopPoolRequest) Descriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{22}
}

func (x *StopPoolRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type StopPoolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopPoolResponse) Reset() {
	*x = StopPoolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ems_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopPoolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopPoolResponse) ProtoMessage() {}

func (x *StopPoolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ems_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopPoolResponse.ProtoReflect.Descriptor instead.
func (*StopPoolResponse) Descriptor() ([]byte, []int) {
	return file_ems_proto_rawDescGZIP(), []int{23}
}

var File_ems_proto protoreflect.FileDescriptor

var file_ems_proto_rawDesc = []byte{
	0x0a, 0x09, 0x65, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xf3, 0x01, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x50,
	0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x59, 0x61, 0x6d, 0x6c, 0x12, 0x1d, 0x0a,
	0x09, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x48, 0x00, 0x52, 0x08, 0x70, 0x6f, 0x6f, 0x6c, 0x59, 0x61, 0x6d, 0x6c, 0x12, 0x29, 0x0a, 0x0f,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x12, 0x32, 0x0a, 0x14, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x72, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x12, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x44, 0x6f, 0x6e, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x3b, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50,
	0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0xf2, 0x01, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x6f,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x6f, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6f, 0x6c, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x79, 0x61, 0x6d, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x6f, 0x6f, 0x6c, 0x59, 0x61, 0x6d, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x64, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x73, 0x69, 0x64, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x39, 0x0a, 0x0a,
	0x77, 0x61, 0x69, 0x74, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x77, 0x61,
	0x69, 0x74, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61,
	0x6d, 0x65, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x22, 0xa1, 0x01, 0x0a, 0x1c, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x50, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x21,
	0x0a, 0x0c, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x69, 0x74, 0x6f, 0x70, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x77, 0x61, 0x69, 0x74, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x22, 0x97, 0x01, 0x0a,
	0x10, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x29, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x38, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x05, 0x74, 0x65,
	0x72, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x65, 0x72, 0x6d, 0x52, 0x05, 0x74, 0x65, 0x72, 0x6d, 0x73,
	0x22, 0x7c, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2a, 0x0a, 0x09, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x52, 0x09, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6e, 0x65, 0x67, 0x61, 0x74, 0x65, 0x22, 0x45,
	0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x73, 0x63, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x51, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6f,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x26, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x40, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x3b, 0x0a, 0x11, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x26, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x24, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x39, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x26, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x68, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x04, 0x6c, 0x6f,
	0x67, 0x73, 0x22, 0x70, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x29,
	0x0a, 0x05, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x05, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0xeb, 0x01, 0x0a, 0x0a, 0x50, 0x6f, 0x6f, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6f, 0x6f, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x50, 0x68,
	0x61, 0x73, 0x65, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x28, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x22, 0xc5, 0x02, 0x0a, 0x0c, 0x50, 0x6f, 0x6f, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x0a, 0x72, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0a, 0x72,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x29, 0x0a, 0x07, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x07, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x12, 0x30, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x73, 0x70, 0x65,
	0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6f,
	0x6f, 0x6c, 0x53, 0x70, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x78, 0x0a, 0x0a, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x34, 0x0a, 0x0a, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xca, 0x01, 0x0a, 0x0e, 0x50,
	0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x77,
	0x61, 0x69, 0x74, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x77, 0x61, 0x69,
	0x74, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x64, 0x5f, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x69, 0x64,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x22, 0x78, 0x0a, 0x0a, 0x50, 0x6f, 0x6f, 0x6c, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x73, 0x22, 0x63, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x53, 0x6c, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x25, 0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x12, 0x0a,
	0x10, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2a, 0x5f, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x12, 0x0d, 0x0a,
	0x09, 0x4f, 0x50, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x53, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e,
	0x4f, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x53, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x10, 0x01,
	0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x50, 0x5f, 0x45, 0x4e, 0x44, 0x53, 0x5f, 0x57, 0x49, 0x54, 0x48,
	0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x50, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e,
	0x53, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x50, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53,
	0x10, 0x04, 0x2a, 0x56, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x4f, 0x47, 0x53, 0x5f,
	0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x4f,
	0x47, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x4c, 0x49, 0x43, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a,
	0x08, 0x4c, 0x4f, 0x47, 0x53, 0x5f, 0x52, 0x41, 0x57, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4c,
	0x4f, 0x47, 0x53, 0x5f, 0x48, 0x54, 0x4d, 0x4c, 0x10, 0x03, 0x2a, 0x5d, 0x0a, 0x0b, 0x50, 0x6f,
	0x6f, 0x6c, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x52, 0x49,
	0x47, 0x47, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x12,
	0x0a, 0x0e, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c,
	0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x5f, 0x50, 0x55,
	0x53, 0x48, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x5f,
	0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x90, 0x01, 0x0a, 0x09, 0x50, 0x6f,
	0x6f, 0x6c, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x48, 0x41, 0x53, 0x45,
	0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x48,
	0x41, 0x53, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x50, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12,
	0x12, 0x0a, 0x0e, 0x50, 0x48, 0x41, 0x53, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x49, 0x4e,
	0x47, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x48, 0x41, 0x53, 0x45, 0x5f, 0x52, 0x55, 0x4e,
	0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x48, 0x41, 0x53, 0x45, 0x5f,
	0x44, 0x4f, 0x4e, 0x45, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x48, 0x41, 0x53, 0x45, 0x5f,
	0x43, 0x4c, 0x45, 0x41, 0x4e, 0x55, 0x50, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x48, 0x41,
	0x53, 0x45, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x06, 0x2a, 0x8a, 0x01, 0x0a,
	0x0c, 0x4c, 0x6f, 0x67, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a,
	0x0f, 0x53, 0x4c, 0x49, 0x43, 0x45, 0x5f, 0x41, 0x42, 0x41, 0x4e, 0x44, 0x4f, 0x4e, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x4c, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x48, 0x41, 0x53,
	0x45, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x4c, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x52, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x4c, 0x49, 0x43, 0x45, 0x5f, 0x43, 0x4f,
	0x4e, 0x54, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x4c, 0x49, 0x43, 0x45,
	0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x4c, 0x49, 0x43, 0x45,
	0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x4c, 0x49, 0x43, 0x45,
	0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x10, 0x06, 0x32, 0x82, 0x04, 0x0a, 0x0a, 0x45, 0x6d,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x19, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01,
	0x12, 0x52, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x72, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x20, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x6f,
	0x6c, 0x12, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x6f, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3a, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x14, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6f,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x09,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x15, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x34, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x33, 0x0a, 0x06, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x12, 0x11, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x37, 0x0a, 0x08, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x6f, 0x6f,
	0x6c, 0x12, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70,
	0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x23,
	0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x68, 0x6f,
	0x6a, 0x70, 0x75, 0x72, 0x2f, 0x65, 0x6d, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ems_proto_rawDescOnce sync.Once
	file_ems_proto_rawDescData = file_ems_proto_rawDesc
)

func file_ems_proto_rawDescGZIP() []byte {
	file_ems_proto_rawDescOnce.Do(func() {
		file_ems_proto_rawDescData = protoimpl.X.CompressGZIP(file_ems_proto_rawDescData)
	})
	return file_ems_proto_rawDescData
}

var file_ems_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_ems_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_ems_proto_goTypes = []interface{}{
	(FilterOp)(0),                        // 0: v1.FilterOp
	(ListenRequestLogs)(0),               // 1: v1.ListenRequestLogs
	(PoolTrigger)(0),                     // 2: v1.PoolTrigger
	(PoolPhase)(0),                       // 3: v1.PoolPhase
	(LogSliceType)(0),                    // 4: v1.LogSliceType
	(*StartLocalPoolRequest)(nil),        // 5: v1.StartLocalPoolRequest
	(*StartPoolResponse)(nil),            // 6: v1.StartPoolResponse
	(*StartPoolRequest)(nil),             // 7: v1.StartPoolRequest
	(*StartFromPreviousPoolRequest)(nil), // 8: v1.StartFromPreviousPoolRequest
	(*ListPoolsRequest)(nil),             // 9: v1.ListPoolsRequest
	(*FilterExpression)(nil),             // 10: v1.FilterExpression
	(*FilterTerm)(nil),                   // 11: v1.FilterTerm
	(*OrderExpression)(nil),              // 12: v1.OrderExpression
	(*ListPoolsResponse)(nil),            // 13: v1.ListPoolsResponse
	(*SubscribeRequest)(nil),             // 14: v1.SubscribeRequest
	(*SubscribeResponse)(nil),            // 15: v1.SubscribeResponse
	(*GetPoolRequest)(nil),               // 16: v1.GetPoolRequest
	(*GetPoolResponse)(nil),              // 17: v1.GetPoolResponse
	(*ListenRequest)(nil),                // 18: v1.ListenRequest
	(*ListenResponse)(nil),               // 19: v1.ListenResponse
	(*PoolStatus)(nil),                   // 20: v1.PoolStatus
	(*PoolMetadata)(nil),                 // 21: v1.PoolMetadata
	(*Repository)(nil),                   // 22: v1.Repository
	(*Annotation)(nil),                   // 23: v1.Annotation
	(*PoolConditions)(nil),               // 24: v1.PoolConditions
	(*PoolResult)(nil),                   // 25: v1.PoolResult
	(*LogSliceEvent)(nil),                // 26: v1.LogSliceEvent
	(*StopPoolRequest)(nil),              // 27: v1.StopPoolRequest
	(*StopPoolResponse)(nil),             // 28: v1.StopPoolResponse
	(*timestamppb.Timestamp)(nil),        // 29: google.protobuf.Timestamp
}
var file_ems_proto_depIdxs = []int32{
	21, // 0: v1.StartLocalPoolRequest.metadata:type_name -> v1.PoolMetadata
	20, // 1: v1.StartPoolResponse.status:type_name -> v1.PoolStatus
	21, // 2: v1.StartPoolRequest.metadata:type_name -> v1.PoolMetadata
	29, // 3: v1.StartPoolRequest.wait_until:type_name -> google.protobuf.Timestamp
	29, // 4: v1.StartFromPreviousPoolRequest.wait_until:type_name -> google.protobuf.Timestamp
	10, // 5: v1.ListPoolsRequest.filter:type_name -> v1.FilterExpression
	12, // 6: v1.ListPoolsRequest.order:type_name -> v1.OrderExpression
	11, // 7: v1.FilterExpression.terms:type_name -> v1.FilterTerm
	0,  // 8: v1.FilterTerm.operation:type_name -> v1.FilterOp
	20, // 9: v1.ListPoolsResponse.result:type_name -> v1.PoolStatus
	10, // 10: v1.SubscribeRequest.filter:type_name -> v1.FilterExpression
	20, // 11: v1.SubscribeResponse.result:type_name -> v1.PoolStatus
	20, // 12: v1.GetPoolResponse.result:type_name -> v1.PoolStatus
	1,  // 13: v1.ListenRequest.logs:type_name -> v1.ListenRequestLogs
	20, // 14: v1.ListenResponse.update:type_name -> v1.PoolStatus
	26, // 15: v1.ListenResponse.slice:type_name -> v1.LogSliceEvent
	21, // 16: v1.PoolStatus.metadata:type_name -> v1.PoolMetadata
	3,  // 17: v1.PoolStatus.phase:type_name -> v1.PoolPhase
	24, // 18: v1.PoolStatus.conditions:type_name -> v1.PoolConditions
	25, // 19: v1.PoolStatus.results:type_name -> v1.PoolResult
	22, // 20: v1.PoolMetadata.repository:type_name -> v1.Repository
	2,  // 21: v1.PoolMetadata.trigger:type_name -> v1.PoolTrigger
	29, // 22: v1.PoolMetadata.created:type_name -> google.protobuf.Timestamp
	29, // 23: v1.PoolMetadata.finished:type_name -> google.protobuf.Timestamp
	23, // 24: v1.PoolMetadata.annotations:type_name -> v1.Annotation
	29, // 25: v1.PoolConditions.wait_until:type_name -> google.protobuf.Timestamp
	4,  // 26: v1.LogSliceEvent.type:type_name -> v1.LogSliceType
	5,  // 27: v1.EmsService.StartLocalPool:input_type -> v1.StartLocalPoolRequest
	8,  // 28: v1.EmsService.StartFromPreviousPool:input_type -> v1.StartFromPreviousPoolRequest
	7,  // 29: v1.EmsService.StartPool:input_type -> v1.StartPoolRequest
	9,  // 30: v1.EmsService.ListPools:input_type -> v1.ListPoolsRequest
	14, // 31: v1.EmsService.Subscribe:input_type -> v1.SubscribeRequest
	16, // 32: v1.EmsService.GetPool:input_type -> v1.GetPoolRequest
	18, // 33: v1.EmsService.Listen:input_type -> v1.ListenRequest
	27, // 34: v1.EmsService.StopPool:input_type -> v1.StopPoolRequest
	6,  // 35: v1.EmsService.StartLocalPool:output_type -> v1.StartPoolResponse
	6,  // 36: v1.EmsService.StartFromPreviousPool:output_type -> v1.StartPoolResponse
	6,  // 37: v1.EmsService.StartPool:output_type -> v1.StartPoolResponse
	13, // 38: v1.EmsService.ListPools:output_type -> v1.ListPoolsResponse
	15, // 39: v1.EmsService.Subscribe:output_type -> v1.SubscribeResponse
	17, // 40: v1.EmsService.GetPool:output_type -> v1.GetPoolResponse
	19, // 41: v1.EmsService.Listen:output_type -> v1.ListenResponse
	28, // 42: v1.EmsService.StopPool:output_type -> v1.StopPoolResponse
	35, // [35:43] is the sub-list for method output_type
	27, // [27:35] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_ems_proto_init() }
func file_ems_proto_init() {
	if File_ems_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ems_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartLocalPoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartPoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartPoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartFromPreviousPoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPoolsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterExpression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterTerm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderExpression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPoolsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Repository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Annotation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolConditions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogSliceEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopPoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ems_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopPoolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ems_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*StartLocalPoolRequest_Metadata)(nil),
		(*StartLocalPoolRequest_ConfigYaml)(nil),
		(*StartLocalPoolRequest_PoolYaml)(nil),
		(*StartLocalPoolRequest_ApplicationTar)(nil),
		(*StartLocalPoolRequest_ApplicationTarDone)(nil),
	}
	file_ems_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*ListenResponse_Update)(nil),
		(*ListenResponse_Slice)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ems_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ems_proto_goTypes,
		DependencyIndexes: file_ems_proto_depIdxs,
		EnumInfos:         file_ems_proto_enumTypes,
		MessageInfos:      file_ems_proto_msgTypes,
	}.Build()
	File_ems_proto = out.File
	file_ems_proto_rawDesc = nil
	file_ems_proto_goTypes = nil
	file_ems_proto_depIdxs = nil
}
